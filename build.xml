<project name="JXplorer" default="build">
	<!--
	  Default property values that may be overriden by developers.
	-->

	<property name="jars" value="jars"/>
	<property name="src" value="src"/>
	<property name="dist" value="dist"/>
	<property name="compile.debug" value="on"/>
	<property name="compile.optimize" value="on"/>
	<property name="docs" value="docs"/>
	<property name="apidocs" value="${docs}/api"/>
	<property name="build_number_file" value="${src}/com/ca/directory/BuildNumber.java" />
	
    <!--
      Properties that may not be overriden by developers.
    -->
    <property name="version_number" value="3.2.2-b1"/> <!-- also update in BitRock jxplorer.xml file-->
    <property name="version" value="JXv${version_number}"/>

    <property name="classes" value="classes"/>
    <property name="report" value="build_reports/"/>
    <property name="release" value="release${version}"/>
	<property name="installer_project_file" value="jxplorer.xml"/>
	<property name="installer_output_dir" value="installers"/>
	<property name="tempdoc_dir" value="tempdoc"/>

    <!--
      Include developer's own property values.
    -->
    <property file="build.properties"/>

    <path id="lib">
        <fileset dir="${jars}" includes="*.jar"/>
    </path>

    <target name="init">
        <tstamp>
            <format property="init.timestamp" pattern="yyyy-MM-dd HH:mm z"/>
        </tstamp>
        
    </target>

    <target name="build" depends="build_number" description="Build all Java code">
        <mkdir dir="${classes}"/>
        <javac srcdir="${src}"
            destdir="${classes}"
            classpathref="lib"
            debug="${compile.debug}"
            optimize="${compile.optimize}"
            deprecation="off"
            nowarn="off"
            target="1.5"
            source="1.5"
            verbose="off">
        </javac>
    </target>

    <target name="build_number" depends="init"
        description="Rewrites the 'BuildNumber.java' file to set compile time stamp.">
        <property name="build.number" value="${version} ${init.timestamp}"/>
        <echo file="${build_number_file}">
        package com.ca.directory;
        // automatically generated by ant build.xml file.
        //THIS FILE MUST NOT BE ADDED TO svn OR THE LIVE MAKE SYSTEM
    
        public class BuildNumber
        {
            public static String value = &quot;JXplorer (build ${version} ${init.timestamp})&quot;;
        }
        </echo>

    </target>

    <target name="clean" depends="init" description="Cleans all build artifacts">
    	<delete file="jxplorer.jar"/>
    	<delete file="${build_number_file}"/>
        <delete dir="${dist}"/>
        <delete dir="${release}"/>
    	<delete dir="${report}"/>
    	<delete dir="${docs}"/>	
    	<delete dir="${installer_output_dir}"/>
    	<delete dir="${tempdoc_dir}"/>
    </target>

    <!-- ================================================================== -->
    <!-- Genjar targets for producing the various jars for the project  -->
    <!-- ================================================================== -->
<!-- IS THERE SOME WAY TO GET THE Class-Path ATTRIBUTE TO USE THE 'lib' PATH DIRECTLY?? -->

    <target name="jar" depends="build" description="Compile and jars jxplorer.jar">
        <jar jarfile="${jars}/jxplorer.jar">
            <fileset dir="${classes}"
                excludes="com/**/*Test.class
                          com/**/*TestSuite.class"/>
            <manifest>
                <attribute name="Created-By" value="${user.name}"/>
                <attribute name="Build-Version" value="${version}"/>
                <attribute name="Class-Path" value="jxplorer.jar help.jar jhall.jar junit.jar log4j-1.2.8.jar"/>
            	<attribute name="Main-Class" value="com.ca.directory.jxplorer.JXplorer"/>
                <section name="com/ca/directory/jxplorer/">
                    <attribute name="Specification-Title" value="JXplorer LDAP browser"/>
                    <attribute name="Specification-Version" value="${version}"/>
                    <attribute name="Implementation-Title" value="JXplorer http://jxplorer.org/"/>
                    <attribute name="Implementation-Version" value="${version} ${init.timestamp}"/>
                    <attribute name="Implementation-Vendor" value="JXplorer Open Source Project"/>
                 </section>
            </manifest>
        </jar>
    </target>

    <target name="dist"
        description="Build complete JXplorer distribution package (from svn image only!)"
        depends="jar">
        <delete dir="${dist}"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${dist}/jxplorer"/>
        <mkdir dir="${dist}/jxplorer/jars"/>
        <copy todir="${dist}/jxplorer/jars">
            <fileset dir="${jars}" includes="*.jar"/>
            <fileset dir="." includes="jxplorer.jar"/>
        </copy>
        <copy todir="${dist}/jxplorer" overwrite="true">
            <fileset dir="." includes="RELEASE.TXT,log4j.xml,licence.txt,jxplorer.sh,jxplorer.ico,jxplorer.bat,example.ldif"/>
        </copy>
        <!-- copy todir="${dist}/jxplorer/themes" overwrite="true">
            <fileset dir="themes"/>
        </copy -->
        <copy todir="${dist}/jxplorer/security" overwrite="true">
            <fileset dir="security"/>
        </copy>
        <copy todir="${dist}/jxplorer/plugins" overwrite="true">
            <fileset dir="plugins"/>
        </copy>
        <copy todir="${dist}/jxplorer/language" overwrite="true">
            <fileset dir="language"/>
        </copy>
        <copy todir="${dist}/jxplorer/JXplorer LDAP Browser.app" overwrite="true">
            <fileset dir="JXplorer LDAP Browser.app"/>
        </copy>

        <fixcrlf srcdir="${dist}"
            eol="lf"
            eof="remove"
            includes="**/*.sh"
            />

        <chmod dir="${dist}" perm="755" 
               includes="**/*.sh"/>

        <chmod file="${dist}/jxplorer/JXplorer LDAP Browser.app/Contents/PkgInfo" perm="755"/>

        <chmod file="${dist}/jxplorer/JXplorer LDAP Browser.app/Contents/MacOS/JXplorer LDAP Browser" perm="755"/>

    </target>



	<!-- NOTE: The properties for building the installers are specific to the 
	     build machine. To get a build to work on you machine, you must:
	     * Install the BitRock Installerbuilder (http://installbuilder.bitrock.com/index.html?_kk=BitRock&_kt=d6fe5960-81be-43da-89de-f6e7fd7aaebe&gclid=CLjIqqOTuqcCFUMUKgodP3r3Ag)
	     * Edit the build.properties file to add values for the installer
	       properties
	-->
	<target name="build_installers" description="build install packages" depends="dist">
        <delete dir="${installer_output_dir}"/>
        <mkdir dir="${installer_output_dir}"/>
		
        <exec executable="${builder}">
            <arg value="build"/>
            <arg value="${installer_project_file}"/>
            <arg value="windows"/>
        </exec>

        <exec executable="${builder}">
            <arg value="build"/>
            <arg value="${installer_project_file}"/>
            <arg value="linux"/>
        </exec>
		
        <exec executable="${builder}">
            <arg value="build"/>
            <arg value="${installer_project_file}"/>
            <arg value="freebsd"/>
        </exec>

        <exec executable="${builder}">
            <arg value="build"/>
            <arg value="${installer_project_file}"/>
            <arg value="solaris-intel"/>
        </exec>

        <exec executable="${builder}">
            <arg value="build"/>
            <arg value="${installer_project_file}"/>
            <arg value="solaris-sparc"/>
        </exec>

        <exec executable="${builder}">
            <arg value="build"/>
            <arg value="${installer_project_file}"/>
            <arg value="aix"/>
        </exec>

        <exec executable="${builder}">
            <arg value="build"/>
            <arg value="${installer_project_file}"/>
            <arg value="hpux"/>
        </exec>

        <exec executable="${builder}">
            <arg value="build"/>
            <arg value="${installer_project_file}"/>
            <arg value="osx"/>
        </exec>

        <zip destfile="${installer_output_dir}/jxplorer-${version_number}-osx-installer.zip" basedir="${installer_output_dir}/jxplorer-${version_number}-osx-installer.app"/>

        <delete dir="${installer_output_dir}/jxplorer-${version_number}-osx-installer.app"/>

        <copy todir="${release}">
            <fileset dir="${installer_output_dir}"/>
        </copy>
    </target>


    <!-- for some reason the OSX build seems to only really work when run on a mac - so I'm making it a separate target.
         Notes: need to replace installer "installbuilder.icns" file with jx.icns file to give installer package correct icon.
         Notes: having a lot of problems maintaining 'execute' permissions on files within the app package...
         ...may need to manually check, fix and zip by hand...
     -->
    <target name="build_installer_mac" description="build install packages for OSX" depends="dist">
        <property name="installer_dir" value="/Applications/BitRock\ InstallBuilder\ Enterprise\ 5.4.14/bin/"/>
        <property name="installer_project_file" value="/Users/chrisbetts/projects/jxplorer/jxplorer.xml"/>
        <property name="builder_output" location="/Users/chrisbetts/projects/jxplorer/installers"/>
        <property name="builder" location="/Applications/BitRock InstallBuilder Enterprise 5.4.14/bin/Builder.app/Contents/MacOS/installbuilder.sh"/>

        <delete dir="${builder_output}"/>
        <mkdir dir="${builder_output}"/>


        <exec executable="${builder}">
            <arg value="build"/>
            <arg value="${installer_project_file}"/>
            <arg value="osx"/>
        </exec>

        <copy todir="${dist}/jxplorer" overwrite="true">
            <fileset dir="." includes="RELEASE.TXT,log4j.xml,licence.txt,jxplorer.sh,jxplorer.ico,jxplorer.bat,example.ldif"/>
        </copy>

        <copy todir="${builder_output}/jxplorer-${version_number}-osx-installer.app/Contents/Resources" overwrite="true">
            <fileset dir="." includes="installbuilder.icns"/>

        </copy>

        <zip destfile="${builder_output}/jxplorer-${version_number}-osx-installer.zip" basedir="${builder_output}/jxplorer-${version_number}-osx-installer.app"/>

        <!--delete dir="${builder_output}/jxplorer-${version_number}-osx-installer.app"/-->


        <copy todir="${release}">
            <fileset dir="${builder_output}"/>
        </copy>

    </target>

    <target name="release"
        description="Create src and deploy release zips/tar.bz2 files (from svn image only!)"
        depends="clean, test, dist, javadoc, build_installers">
        <mkdir dir="${release}"/>
        <mkdir dir="temp/jxplorer/src"/>
        <copy todir="temp/jxplorer/src">
            <fileset dir="${src}"/>
        </copy>
        <mkdir dir="${tempdoc_dir}/jxplorer/docs"/>
        <move todir="${tempdoc_dir}/jxplorer/docs">
            <fileset dir="${docs}"/>
        </move>
        <zip destfile="${release}/${version}src.zip" basedir="temp"/>
        <zip destfile="${release}/${version}deploy.zip" basedir="${dist}"/>
        <zip destfile="${release}/${version}javadoc.zip" basedir="${tempdoc_dir}"/>
        <tar tarfile="${release}/${version}src.tar.bz2" basedir="temp" compression="bzip2"/>
        <tar tarfile="${release}/${version}deploy.tar.bz2" basedir="${dist}" compression="bzip2"/>
        <tar tarfile="${release}/${version}javadoc.tar.bz2" basedir="${tempdoc_dir}" compression="bzip2"/>
        <delete dir="temp"/>
        <move todir="${docs}">
            <fileset dir="${tempdoc_dir}/jxplorer/docs"/>
        </move>
    	<delete dir="${tempdoc_dir}"/>

    </target>

    <!-- ==================================================================	-->
    <!-- JUnit test targets							                        -->
    <!--                                                                    -->
    <!-- Reminder: to get these to work you require optional.jar and        -->
    <!-- junit.jar in the %ANT_HOME%/lib directory		                    -->
    <!-- ================================================================== -->

    <target name="compile_tests" depends="build">
        <mkdir dir="${report}"/>
        <javac destdir="${classes}" includeAntRuntime="false"
            classpathref="lib" debug="${compile.debug}">
            <src path="${src}"/>
        </javac>
    </target>

    <target name="test" depends="compile_tests"
        description="Run JUnit tests (requires junit.jar in %ANT%/lib !!!)">
        <junit printsummary="yes" haltonerror="off" haltonfailure="on">
            <classpath>
                <pathelement location="${classes}"/>
                <!-- pathelement path="${jars}" / -->
                <fileset dir="${jars}" includes="*.jar"/> <!-- &*(%&*())(* required to avoid obscure errors with log4j...) -->
            </classpath>
            <formatter type="plain"/>
            <batchtest fork="yes" todir="${report}">
                <fileset dir="${classes}">
                    <include name="**/*TestSuite.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="javadoc" description="generate javadoc source documentation (produces MANY warnings :-) )">
        <mkdir dir="${apidocs}"/>

        <javadoc access="private"
            destdir="${apidocs}"
            author="true"
            version="true"
            classpathref="lib"
            use="true"
            additionalparam="-breakiterator"
            windowtitle="JXplorer Source Documentation">
            <packageset dir="${src}" defaultexcludes="yes">
                <include name="com/**"/>
            </packageset>

            <doctitle><![CDATA[<h1>JXplorer Ldap Browser</h1>]]></doctitle>
            <bottom><![CDATA[<i>This is Open Source Code under the CA Open Source Licence ( == Apache Licence)</i>]]></bottom>
            <link href="http://java.sun.com/products/jdk/1.4/docs/api/"/>
        </javadoc>
    </target>

</project>
